% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/SmaRPanel.R
\name{SmaRPanel}
\alias{SmaRPanel}
\title{SmaRPanel}
\usage{
SmaRPanel(id, ..., title = NULL, collapsed = NA)
}
\arguments{
\item{id}{The unique id of the panel.}

\item{...}{UI elements to be displayed in the panel body.}

\item{title}{The title to be displayed in the panel heading.}

\item{collapsed}{Whether the panel should be created as collapsed or
expanded. If \code{NA} (the default), a non-collapsible panel is created.}
}
\value{
The UI definition of the panel.
}
\description{
Custom collapsible panel for the SmaRP Shiuny app.
}
\details{
All elements of the panel are specified with additional classes
\code{"panel-smarp"}, \code{"panel-heading-smarp"}, \code{"panel-title-smarp"},
\code{"panel-body-smarp"}, used for CSS customization. Similarly, the collapse
\code{\link[=actionButton]{actionButton()}} is defined with no \code{label} nor \code{icon} and has a custom
class \code{"btn-collapse-smarp"}, to be used for CSS customization via the
\code{:after} pseudo-element.
}
\examples{
if (interactive()) {
  library(shiny)
  long_title <- "Lorem ipsum dolor sit amet, consectetur adipisicing elit."
  ui <- fluidPage(
    tags$head(
      includeCSS(system.file("application/www/style.css", package = "SmaRP"))
    ),
    titlePanel("SmaRPanel"),
    icon("cog"),
    fluidRow(
      column(2L, SmaRPanel(
        id = "simple-panel", title = long_title,
        verticalLayout(textInput("a", "A"), textInput("b", "B"))
      )),
      column(2L, SmaRPanel(
        id = "collapsed-panel", title = long_title,
        verticalLayout(textInput("a", "A"), textInput("b", "B")),
        collapsed = FALSE
      )),
      column(2L, SmaRPanel(
        id = "expanded-panel", title = long_title,
        verticalLayout(textInput("a", "A"), textInput("b", "B")),
        collapsed = TRUE
      )),
      column(2L, SmaRPanel(
        id = "no-title-panel",
        verticalLayout(textInput("a", "A"), textInput("b", "B"))
      )),
      column(2L, SmaRPanel(
        id = "no-title-expanded-panel",
        verticalLayout(textInput("a", "A"), textInput("b", "B")),
        collapsed = FALSE
      ))
    )
  )
  server <- function(input, output) {}
  runApp(shinyApp(ui = ui, server = server), launch.browser = TRUE)
}
}
